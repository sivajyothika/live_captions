from flask import Flask, jsonify,request
import subprocess
import pyrebase
# from requests import request

config = {
  "apiKey": "AIzaSyBgSe5R_ufSD4Ht1L4oSNK6p9TKVg-N16w",
  "authDomain": "signuplogin-ee55f.firebaseapp.com",
  "databaseURL": "https://signuplogin-ee55f-default-rtdb.firebaseio.com",
  "projectId": "signuplogin-ee55f",
  "storageBucket": "signuplogin-ee55f.appspot.com",
  "messagingSenderId": "153606722734",
  "appId": "1:153606722734:web:13870b7f7ed7f3bedc893f",
  "measurementId": "G-LTXT6EXDSE",
  "serviceAccount":"serviceAccountKey.json"
};

firebase_storage = pyrebase.initialize_app(config)
storage = firebase_storage.storage()
app = Flask(__name__)
@app.route("/", methods=['GET'])
def home():
    filename=str(request.args['query'])
    # # print(filename)
    storage.download("videos/{}".format(filename),"video.mp4")
    subprocess.run(["python","model.py"])
    print("video subtitled sucess")
    # file_path = "video_Subtitled.mp4"
    # remote_path = "files_sub/{}".format(filename)
    # storage.child(remote_path).put(file_path)
    # #copying the subtitled video
    subprocess.run(["python","shift.py"])
    # # # #removing the files generated by model
    subprocess.run(["python","remove.py"])
    dic={}
    dic['output'] = filename
    return jsonify(dic) 
if __name__ == "__main__":
    app.run()
# app = Flask(__name__)


# @app.route('/', methods=['GET', 'POST'])
# def welcome():
#     subprocess.run(["python","model.py"])
#     return "Hello World!"


# if __name__ == '__main__':
#     app.run()

# def upload_video():
#     video_file = request.files['video']
#     video_file.save('video.mp4')

# from flask import Flask, request, jsonify
# import moviepy.editor as mp
# import requests
# import pysrt

# app = Flask(__name__)

# @app.route('/upload_video', methods=['POST'])
# def upload_video():
#     video_file = request.files['video']
#     video_file.save('video.mp4')
    
#     # Extract audio from video
#     video = mp.VideoFileClip('video.mp4')
#     audio = video.audio
    
#     # Transcribe audio to text
#     transcription_api_url = 'your_transcription_api_url'
#     audio_file = audio.write_audiofile('audio.wav')
#     audio_file = open(audio_file, 'rb')
#     audio_content = audio_file.read()
#     headers = {'Content-type': 'audio/wav'}
#     response = requests.post(transcription_api_url, data=audio_content, headers=headers)
#     text = response.json()['text']
    
#     # Generate subtitle file
#     subtitle = pysrt.SubRipFile()
#     subtitle.append(pysrt.SubRipItem(index=1, start=pysrt.SubRipTime(0, 0, 0, 0), end=pysrt.SubRipTime(0, 0, 5, 0), text=text))
#     subtitle.save('subtitle.srt')
    
#     # Send subtitle file back to Flutter app
#     subtitle_file = open('subtitle.srt', 'rb')
#     return subtitle_file.read()
